apiVersion: v1
kind: ConfigMap
metadata:
  name: init
  namespace: default
data:
  init.sh: |
    #!/bin/sh

    while ! wget -qO /dev/null ${VAULT_ADDR}/v1/sys/health 2>/dev/null
    do
    echo "Waiting for vault to be ready"
    sleep 1
    done

    if vault read auth/kubernetes/config > /dev/null; then
    echo "Vault Kubernetes Auth was already configured"
    exit 0
    fi

    echo "Configuring Vault Kubernetes Auth"

    vault auth enable kubernetes
    vault write auth/kubernetes/config token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" kubernetes_host="https://kubernetes.default" kubernetes_ca_cert="$(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt)"
    vault write auth/kubernetes/role/cluster-service bound_service_account_names=cluster-service bound_service_account_namespaces=giantswarm policies=cluster-service ttl=4320h
    vault write auth/kubernetes/role/cert-operator bound_service_account_names="cert-operator-*" bound_service_account_namespaces=giantswarm policies=cert-operator ttl=4320h

    while :
    do
      # 1 year
      sleep 31536000
    done

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
  namespace: default
  labels:
    app: vault
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      volumes:
        - name: init
          configMap:
            name: init
      restartPolicy: Always
      containers:
        - name: vault
          image: vault:0.10.3
          ports:
          - name: http
            containerPort: 8200
          securityContext:
            capabilities:
              add: ["IPC_LOCK"]
          args:
          - server
          - -dev
          - -dev-root-token-id={{.Values.vault.token}}
          - -log-level=debug
        - name: config
          image: vault:0.10.3
          volumeMounts:
            - mountPath: /init/
              name: init
          env:
            - name: VAULT_ADDR
              value: http://127.0.0.1:8200
            - name: VAULT_TOKEN
              value: "{{.Values.vault.token}}"
          command:
            - sh
            - /init/init.sh
---

apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: default
  labels:
    app: vault
spec:
  type: NodePort
  ports:
    - name: api
      nodePort: 30010
      port: 8200
      targetPort: http
  selector:
    app: vault
  sessionAffinity: None
